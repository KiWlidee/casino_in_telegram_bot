from time import sleep

from random import choice, randint

import keyboards as kb

import user

from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.filters import Command


router = Router()

casino_slots = ["üçí", "üçí", "üçí", "üçè", "üçè", "üçá", "üçì", "üçë", "üí©"]


@router.message(Command("start"))
async def start(message: Message):
    await message.answer(f"""–ü—Ä–∏–≤–µ—Ç {message.from_user.full_name}! –≠—Ç–æ –∫–∞–∑–∏–Ω—ã—á –±–æ—Ç —Å–æ —Å–ª–æ—Ç–∞–º–∏.
–í–∞–ª—é—Ç–∞ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤–∞—è, —Ç–∞–∫ —á—Ç–æ –Ω–µ –æ—á–∫—É–π.""", reply_markup=kb.register)
    
@router.message(F.text == "‚úç –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è / üîë –í–æ–π—Ç–∏")
async def register(message: Message):
    await message.answer("–ò—â—É –≤–∞—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...", reply_markup=ReplyKeyboardRemove())
    sleep(0.5)
    if user.user_find(message.from_user.id):
        user.add_znach_table()
        user.start_username_add(message.from_user.id)
        user.start_profile_stats(message.from_user.id)
        await message.answer("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å!", reply_markup=kb.main_menu)
    else:
        await message.answer("üîë –í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç!", reply_markup=kb.main_menu)

@router.message(F.text == "‚û°Ô∏è –ü–µ—Ä–µ–π—Ç–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")
async def casino_menu(message: Message):
    await message.answer("–ü–æ–¥–Ω—è–ª –±–∞–±–ª–∞, —Å—Ç–∞–ª–∏ –¥—Ä—É–≥–∏–º–∏ –¥–µ–ª–∞.", reply_markup=kb.main_menu)

@router.message(F.text == "üîö –í—ã–π—Ç–∏")
async def stop(message: Message):
    await start(message)

@router.message(F.text == "ü™™ –ü—Ä–æ—Ñ–∏–ª—å")
async def profile(message: Message):
    pass
    """–í—ã–≤–µ—Å—Ç–∏: –ë–∞–ª–∞–Ω—Å, –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä—É—Ç–æ–∫ –≤ —Å–ª–æ—Ç–∞—Ö, 
       –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —Å—ã–≥—Ä–∞–Ω–Ω—ã—Ö –∏–≥—Ä –≤ dice, —Å–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ –ø—Ä–æ–∏–≥—Ä–∞–ª/–≤—ã–∏–≥—Ä–∞–ª"""
    stats = user.profile_stats(message.from_user.id)
    for i in stats:
        await message.answer(i, reply_markup=kb.main_menu)

@router.message(F.text == "üé∞ –ö—Ä—É—Ç–∏—Ç—å —Å–ª–æ—Ç—ã")
async def spin_slots(message: Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–ª–æ—Ç—ã! –ö–∞–∂–¥–∞—è –∫—Ä—É—Ç–∫–∞ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å 50 –≤–µ—á–Ω–æ –∑–µ–ª–µ–Ω—ã—Ö."
                         , reply_markup=kb.slots)

@router.message(F.text == "‚¨ÜÔ∏è –ö—Ä—É—Ç–∏–º")
async def spin_slots(message: Message):
    if user.slots_spin_minus_money(message.from_user.id) == "–î–µ–Ω—å–≥–∏ —Å–ø–∏—Å–∞–Ω—ã.":
        user.how_much_u_lose(message.from_user.id, 50)
        user.slots_spin_add(message.from_user.id)
        await message.answer(user.slots_spin_minus_money(message.from_user.id))
        result = ""
        for _ in range(3):
            result += choice(casino_slots)
        await message.answer(result, reply_markup=kb.slots)
        if result == casino_slots[0] * 3:
            await message.answer("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ —á–µ—Ä–µ—à–Ω—é –∏ 400 –≤–µ—á–Ω–æ –∑–µ–ª–µ–Ω—ã—Ö")
            user.how_much_u_won(message.from_user.id, 400)
            user.money_winner(message.from_user.id, 400)
        elif result == casino_slots[3] * 3:
            await message.answer("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ —è–±–ª–æ–∫–∏ –∑–µ–ª–µ–Ω—ã–µ –∏ 750 –≤–µ—á–Ω–æ –∑–µ–ª–µ–Ω—ã—Ö... —è–±–ª–æ–∫ –≥—Ä–µ–Ω–Ω–∏ —Å–º–∏—Ç")
            user.how_much_u_won(message.from_user.id, 750)
            user.money_winner(message.from_user.id, 750)
        elif result == casino_slots[-4] * 3:
            await message.answer("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –∫–∏—à–º–∏—à –∏ 1000 –≤–µ—á–Ω–æ –∑–µ–ª–µ–Ω—ã—Ö")
            user.how_much_u_won(message.from_user.id, 1000)
            user.money_winner(message.from_user.id, 1000)
        elif result == casino_slots[-3] * 3:
            await message.answer("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π –ø–∏—Ä–æ–≥ –∏ 1500 –≤–µ—á–Ω–æ –∑–µ–ª–µ–Ω—ã—Ö")
            user.how_much_u_won(message.from_user.id, 1500)
            user.money_winner(message.from_user.id, 1500)
        elif result == casino_slots[-2] * 3:
            await message.answer("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –ø—ç—Ä—Å–∏–∫ –∏ 2000 –≤–µ—á–Ω–æ –∑–µ–ª–µ–Ω—ã—Ö")
            user.how_much_u_won(message.from_user.id, 2000)
            user.money_winner(message.from_user.id, 2000)
    else:
        await message.answer("–ë—ç–π–±–∏ –Ω–æ—É –º–∞–Ω–∏", reply_markup=kb.casino_menu)

@router.message(F.text == "üé≤ –ö–æ—Å—Ç–∏")
async def dice(message: Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ dice! –ö–∞–∂–¥—ã–π –±—Ä–æ—Å–æ–∫ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å 50 –≤–µ—á–Ω–æ –∑–µ–ª–µ–Ω—ã—Ö."
                         , reply_markup=kb.dice)

@router.message(F.text == "üì¶ –ë—Ä–æ—Å–∞–µ–º")
async def drop_dice(message: Message):
    if user.slots_spin_minus_money(message.from_user.id) == "–î–µ–Ω—å–≥–∏ —Å–ø–∏—Å–∞–Ω—ã.":
        user.how_much_u_lose(message.from_user.id, 50)
        user.dice_drop_add(message.from_user.id)
        await message.answer(user.slots_spin_minus_money(message.from_user.id), reply_markup=kb.dice_game)
    else:
        await message.answer("–ë—ç–π–±–∏ –Ω–æ—É –º–∞–Ω–∏", reply_markup=kb.casino_menu) 

@router.message(F.text == "ü§î –í—ã–±–æ—Ä –æ–¥–Ω–æ–≥–æ —á–∏—Å–ª–∞")
async def dice_choose_one(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏ —á–∏—Å–ª–æ", reply_markup=kb.dice_number_choose)
    @router.message(F.text)
    async def choose_number(message: Message):
        if message.text == "1Ô∏è‚É£":
            perc_num = "1"
        elif message.text == "2Ô∏è‚É£":
            perc_num = "2"
        elif message.text == "3Ô∏è‚É£":
            perc_num = "3"
        elif message.text == "4Ô∏è‚É£":
            perc_num = "4"
        elif message.text == "5Ô∏è‚É£":
            perc_num = "5"
        elif message.text == "6Ô∏è‚É£":
            perc_num = "6"
        else:
            await message.answer("–ù—É —Ç—ã —Ç—É–ø–µ–Ω—å. –í—ã–±–∏—Ä–∞–π –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö.", reply_markup=kb.dice)
        dice_number = str(randint(1, 6))
        if perc_num == dice_number:
            user.how_much_u_won(message.from_user.id, 150)
            user.money_winner(message.from_user.id, 150)
            await message.answer("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 150 –≤–µ—á–Ω–æ –∑–µ–ª–µ–Ω—ã—Ö", reply_markup=kb.dice)
        else:
            await message.answer(f"–†–∞–Ω–¥–æ–º–Ω—ã–º —á–∏—Å–ª–æ–º –±—ã–ª–æ - {dice_number}. –¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª", reply_markup=kb.dice)

@router.message(F.text == "ü§î –í—ã–±–æ—Ä –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞")
async def dice_choose_promezh(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏ –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ —á–∏—Å–µ–ª", reply_markup=kb.dice_number_choose_promezh)
    @router.message(F.text)
    async def dice_chooses_pr(message: Message):
        if message.text == "1Ô∏è‚É£2Ô∏è‚É£":
            user_promezh = "12"
        elif message.text == "3Ô∏è‚É£4Ô∏è‚É£":
            user_promezh = "34"
        elif message.text == "5Ô∏è‚É£6Ô∏è‚É£":
            user_promezh = "56"
        else:
            await message.answer("–ù—É —Ç—ã —Ç—É–ø–µ–Ω—å. –í—ã–±–∏—Ä–∞–π –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö.", reply_markup=kb.dice) 
        dice_number = str(randint(1, 6))
        if dice_number in user_promezh:
            user.how_much_u_won(message.from_user.id, 75)
            user.money_winner(message.from_user.id, 75)
            await message.answer("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 75 –≤–µ—á–Ω–æ –∑–µ–ª–µ–Ω—ã—Ö", reply_markup=kb.dice)
        else:
            await message.answer(f"–†–∞–Ω–¥–æ–º–Ω—ã–º —á–∏—Å–ª–æ–º –±—ã–ª–æ - {dice_number}. –¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª", reply_markup=kb.dice)